<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- Spring 默认不使用注解装配 Bean，因此我们需要在 Spring 的 XML 配置中，
        通过 context:component-scan 元素开启 Spring Beans的自动扫描功能。
        开启此功能后，Spring 会自动从扫描指定的包（base-package 属性设置）及其子包下的所有类，
        如果类上使用了 @Component 注解，就将该类装配到容器中。 -->
    <!-- xmlns:context="http://www.springframework.org/schema/context" -->
    <!-- xsi:schemaLocation="http://www.springframework.org/schema/context -->
    <!-- http://www.springframework.org/schema/context/spring-context.xsd -->

    <!-- 开启组件扫描 -->
    <!-- use-default-filters设置打开或关闭默认扫描规则 -->
    <context:component-scan base-package="com.hc.spring6" use-default-filters="true">
        <!-- context:exclude-filter标签：指定排除规则 -->
        <!-- type：设置排除的类型 -->
        <!-- type="annotation"，根据注解排除，expression中设置要排除的注解的全类名 -->
        <!-- type="assignable"，根据类型排除，expression中设置要排除的类型的全类名 -->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--<context:exclude-filter type="assignable" expression="com.hc.spring6.controller.UserController"/>-->

        <!-- context:include-filter标签：扫描指定组件（和use-default-filters设置属性有关） -->
        <!-- type：设置包含的类型 -->
        <!-- type="annotation"，根据注解，expression中设置包含的注解的全类名 -->
        <!-- type="assignable"，根据类型，expression中设置包含的类型的全类名 -->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
        <!--<context:include-filter type="assignable" expression="com.hc.spring6.controller.UserController"/>-->
    </context:component-scan>
</beans>